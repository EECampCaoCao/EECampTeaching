// Generated by CoffeeScript 1.9.3
(function() {
  var regex, root, url;

  root = window.App;

  regex = /http[s]?:\/\/([^\/:]*):/;

  url = regex.exec(document.URL)[1];

  root.wsuri = "ws://" + url + ":3000/ws/";

  root.ws = null;

  root.connect = function() {
    var options, ws;
    options = {
      automaticOpen: false,
      reconnectInterval: 500,
      maxReconnectInterval: 5000,
      reconnectDecay: 1.0
    };
    ws = new ReconnectingWebSocket(root.wsuri, null, options);
    ws.onopen = function() {
      console.log("connected to", root.wsuri);
      return root.onSocketConnected();
    };
    ws.onmessage = function(evt) {
      var reader;
      reader = new FileReader();
      reader.onload = function(evt) {
        var data;
        data = JSON.parse(evt.target.result);
        return root.scene.updateStatus(data);
      };
      return reader.readAsText(evt.data);
    };
    ws.onerror = function(e) {
      return console.log(e);
    };
    ws.onclose = function() {
      console.log("closed");
      return root.onSocketClosed();
    };
    ws.sendJSON = function(obj) {
      return this.send(JSON.stringify(obj));
    };
    return root.ws = ws;
  };

  root.connectPythonErrSocket = function() {
    var ws2;
    ws2 = new WebSocket('ws://localhost:4000/ws/');
    ws2.onopen = function() {
      return console.log("connected to 4000");
    };
    ws2.onmessage = function(evt) {
      var data, errMesg;
      data = evt.data;
      data = JSON.parse(data);
      errMesg = data.data;
      return root.onPythonError(errMesg, data.isError);
    };
    ws2.onerror = function(e) {
      return console.log(e);
    };
    return ws2.onclose = function() {
      return console.log("closed");
    };
  };

}).call(this);
